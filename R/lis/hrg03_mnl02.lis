Codefile:hrg03_mnl02.r 


codebookentries('altij',asm)

altij[] (Length:9476, # of nonmissing elements:9476)
  Frequency PctShare LevelCode LevelText
1      2369       25         1      CART
2      2369       25         2     CARNT
3      1039       11         3       BUS
4      1089       11         4        TR
5      1280       14         5        BW
6      1330       14         6        LR


apollo_modelOutput(model)
Model run by Brosig using Apollo 0.3.5 on R 4.4.3 for Windows.
Please acknowledge the use of Apollo by citing Hess & Palma (2019)
  DOI 10.1016/j.jocm.2019.100170
  www.ApolloChoiceModelling.com

Model name                                  : hrg03_mnl02
Model description                           : hrg03a_mnl02: Replication of hrg p. 329f ASC only model
Model run at                                : 2025-04-25 07:45:36.653944
Estimation method                           : bgw
Model diagnosis                             : Relative function convergence
Optimisation diagnosis                      : Maximum found
     hessian properties                     : Negative definite
     maximum eigenvalue                     : -43.467489
     reciprocal of condition number         : 0.0690516
Number of individuals                       : 795
Number of rows in database                  : 2369
Number of modelled outcomes                 : 2369

Number of cores used                        :  1 
Model without mixing

LL(start)                                   : -3306.51
LL at equal shares, LL(0)                   : -3284.13
LL at observed shares, LL(C)                : -4039.69
LL(final)                                   : -3277.01
Rho-squared vs equal shares                  :  0.0022 
Adj.Rho-squared vs equal shares              :  6e-04 
Rho-squared vs observed shares               :  0.1888 
Adj.Rho-squared vs observed shares           :  0.1888 
AIC                                         :  6564.02 
BIC                                         :  6592.87 

Estimated parameters                        : 5
Time taken (hh:mm:ss)                       :  00:00:0.64 
     pre-estimation                         :  00:00:0.2 
     estimation                             :  00:00:0.07 
     post-estimation                        :  00:00:0.38 
Iterations                                  :  4  

Unconstrained optimisation.

Estimates:
             Estimate        s.e.   t.rat.(0)    Rob.s.e. Rob.t.rat.(0)
asc_cart      0.10014     0.07333      1.3657     0.08399        1.1923
asc_carnt     0.19242     0.07232      2.6607     0.08268        2.3271
asc_bus       0.02563     0.09810      0.2613     0.08838        0.2900
asc_tr       -0.04433     0.09285     -0.4774     0.09607       -0.4614
asc_bw        0.09942     0.08480      1.1724     0.09227        1.0774
asc_lr        0.00000          NA          NA          NA            NA


Overview of choices for MNL model component :
                                    CART   CARNT      TR      LR      BW     BUS
Times available                  2369.00 2369.00 1089.00 1330.00 1280.00 1039.00
Times chosen                      600.00  658.00  243.00  305.00  319.00  244.00
Percentage chosen overall          25.33   27.78   10.26   12.87   13.47   10.30
Percentage chosen when available   25.33   27.78   22.31   22.93   24.92   23.48



Old result file "hrg03_mnl/hrg03_mnl02_output.txt" removed/overwritten
Old result file "hrg03_mnl/hrg03_mnl02_model.rds" removed/overwritten
Model output saved to hrg03_mnl/hrg03_mnl02_output.txt 
Model object saved to hrg03_mnl/hrg03_mnl02.rds 
 num -3220
 num -3277


diff <- 2 * (LL1 - LL2)
[1] 113.7237


apollo_lrTest('hrg03_mnl/hrg03_mnl01', model)
The order of your two models will be reversed in the output as model 1 has better fit than model 2.

                  LL par
hrg03_mnl02 -3277.01   5
hrg03_mnl01 -3220.15   6
Difference     56.86   1

Likelihood ratio test-value:    113.72 
Degrees of freedom:             1 
Likelihood ratio test p-value:  1.501e-26 
INFORMATION: The p-value from the test is returned invisibly as an output from this function. Calling the function via result=apollo_lrTest(...) will save this output in an object called result (or otherwise named object). 
